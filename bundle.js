(()=>{"use strict";class e{constructor(e,t){this.suit=e,this.value=t}getColor(){return["♥","♦"].includes(this.suit)?"red":"black"}}class t{constructor(){this.cards=[],this.createDeck()}createDeck(){const t=["♥","♦","♣","♠"],s=["2","3","4","5","6","7","8","9","10","J","Q","K","A"];for(let i=0;i<6;i++)for(let i of t)for(let t of s)this.cards.push(new e(i,t));this.shuffle()}shuffle(){for(let e=this.cards.length-1;e>0;e--){const t=Math.floor(Math.random()*(e+1));[this.cards[e],this.cards[t]]=[this.cards[t],this.cards[e]]}}drawCard(){return this.cards.pop()}getRemainingCards(){return this.cards.length}}var s=function(e,t,s,i){return new(s||(s=Promise))((function(a,n){function r(e){try{d(i.next(e))}catch(e){n(e)}}function h(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){var t;e.done?a(e.value):(t=e.value,t instanceof s?t:new s((function(e){e(t)}))).then(r,h)}d((i=i.apply(e,t||[])).next())}))};class i{constructor(){this.messageQueue=[],this.isShowingMessage=!1,this.elements={dealerCards:this.getElement("dealerCards"),playerCards:this.getElement("playerCards"),dealerScore:this.getElement("dealerScore"),playerScore:this.getElement("playerScore"),chips:this.getElement("chips"),newGame:this.getElement("newGame"),hit:this.getElement("hit"),stand:this.getElement("stand"),double:this.getElement("double"),split:this.getElement("split"),insurance:this.getElement("insurance"),surrender:this.getElement("surrender"),betOverlay:this.getElement("betOverlay"),messageOverlay:this.getElement("messageOverlay"),messageTitle:this.getElement("messageTitle"),messageText:this.getElement("messageText"),addFunds:this.getElement("addFunds"),dealerMessage:this.getElement("dealerMessage"),cardCount:this.getElement("cardCount"),addFundsOverlay:this.getElement("addFundsOverlay")},this.playerHandContainers=[this.elements.playerCards],this.sounds={deal:new Audio("sounds/deal.mp3"),win:new Audio("sounds/win.mp3"),lose:new Audio("sounds/lose.mp3"),chip:new Audio("sounds/chip.mp3")}}renderCard(e,t){return s(this,arguments,void 0,(function*(e,t,s=!1){this.sounds.deal.play().catch((()=>{}));const i=document.createElement("div");i.className=`card ${s?"back":e.getColor()}`,s||(i.innerHTML=`<div>${e.value}</div><div class="suit">${e.suit}</div><div>${e.value}</div>`),t.appendChild(i),requestAnimationFrame((()=>i.classList.add("revealed"))),yield this.delay(250)}))}revealCard(e,t){e.classList.remove("back"),e.innerHTML=`<div>${t.value}</div><div class="suit">${t.suit}</div><div>${t.value}</div>`,e.classList.add(t.getColor()),requestAnimationFrame((()=>e.classList.add("revealed")))}clearCards(e,t){return s(this,void 0,void 0,(function*(){const s=Array.from(e.children);for(const e of s)e.classList.remove("revealed"),yield this.delay(200),e.remove();t.length=0}))}renderSplitHands(e,t,i){return s(this,void 0,void 0,(function*(){for(let s=0;s<e.length;s++){const a=this.getPlayerHandContainer(s),n=Array.from(a.children);for(const e of n)e.classList.remove("revealed"),yield this.delay(200),e.remove();a.dataset.bet=i[s].toString();for(const t of e[s])yield this.renderCard(t,a);a.classList.toggle("active-hand",s===t)}}))}updateScores(e,t,s){this.elements.dealerScore.textContent=`Дилер: ${e}`,this.elements.playerScore.textContent=`Игрок: ${t}`,this.elements.chips.textContent=s.toString(),this.updateAddFundsOverlay(s,"idle")}showMessage(e,t,s){this.messageQueue.push({title:e,text:t,duration:s}),this.processMessageQueue()}processMessageQueue(){return s(this,void 0,void 0,(function*(){if(this.isShowingMessage||0===this.messageQueue.length)return;this.isShowingMessage=!0;const{title:e,text:t,duration:s}=this.messageQueue.shift(),i=Math.max(s,1500);"Победа"===e&&this.sounds.win.play().catch((()=>{})),"Поражение"===e&&this.sounds.lose.play().catch((()=>{})),this.elements.messageTitle.textContent=e,this.elements.messageText.textContent=t,this.elements.messageOverlay.classList.add("active"),yield this.delay(i),this.hideMessage(),this.isShowingMessage=!1,this.processMessageQueue()}))}hideMessage(){this.elements.messageOverlay.classList.remove("active")}showBetOverlay(){this.sounds.chip.play().catch((()=>{})),this.elements.betOverlay.classList.add("active"),this.elements.newGame.classList.add("hidden")}hideBetOverlay(){this.elements.betOverlay.classList.remove("active"),this.elements.newGame.classList.remove("hidden")}updateUI(e){this.elements.hit.classList.toggle("hidden",!e.hit),this.elements.stand.classList.toggle("hidden",!e.stand),this.elements.double.classList.toggle("hidden",!e.double),this.elements.split.classList.toggle("hidden",!e.split),this.elements.insurance.classList.toggle("hidden",!e.insurance),this.elements.surrender.classList.toggle("hidden",!e.surrender)}showDealerMessage(e){this.elements.dealerMessage.textContent=e,this.elements.dealerMessage.classList.add("active"),setTimeout((()=>this.elements.dealerMessage.classList.remove("active")),1e4)}updateCardCount(e,t){this.elements.cardCount.textContent=`Карт осталось: ${e}`}updateAddFundsOverlay(e,t){const s=this.elements.addFundsOverlay;document.getElementById("fundsStatus").textContent=`Текущий баланс: ${e} фишек`,s.classList.toggle("active",e<50&&("idle"===t||"ended"===t))}getElement(e){const t=document.getElementById(e);if(!t)throw new Error(`Элемент с ID "${e}" не найден`);return t}getPlayerHandContainer(e){if(!this.playerHandContainers[e]){const t=document.createElement("div");t.className="cards split-hand",this.elements.playerCards.parentElement.appendChild(t),this.playerHandContainers[e]=t}return this.playerHandContainers[e]}delay(e){return new Promise((t=>setTimeout(t,e)))}}var a=function(e,t,s,i){return new(s||(s=Promise))((function(a,n){function r(e){try{d(i.next(e))}catch(e){n(e)}}function h(e){try{d(i.throw(e))}catch(e){n(e)}}function d(e){var t;e.done?a(e.value):(t=e.value,t instanceof s?t:new s((function(e){e(t)}))).then(r,h)}d((i=i.apply(e,t||[])).next())}))};class n{constructor(){this.deck=new t,this.player={hands:[[]],bets:[0],currentHandIndex:0},this.dealerHand=[],this.chips=n.INITIAL_CHIPS,this.insuranceBet=0,this.gameState="idle",this.cardCount=0,this.ui=new i,this.initializeGame()}initializeGame(){this.loadChipsFromStorage(),this.updateUI(),this.bindEvents()}bindEvents(){this.ui.elements.newGame.onclick=()=>this.showBetOverlay(),this.ui.elements.hit.onclick=()=>this.hit(),this.ui.elements.stand.onclick=()=>this.stand(),this.ui.elements.double.onclick=()=>this.double(),this.ui.elements.split.onclick=()=>this.split(),this.ui.elements.insurance.onclick=()=>this.buyInsurance(),this.ui.elements.surrender.onclick=()=>this.surrender(),this.ui.elements.addFunds.onclick=()=>this.addFunds(),document.querySelectorAll(".bet-btn").forEach((e=>{e.addEventListener("click",(()=>{const t=parseInt(e.dataset.bet||"0",10);this.startGame(t)}))})),this.ui.showDealerMessage("Сделайте вашу ставку"),this.ui.elements.messageOverlay.onclick=()=>this.ui.hideMessage()}showBetOverlay(){this.chips<50?this.showMessage("Недостаточно фишек","Минимальная ставка 50 фишек!",3e3):(this.gameState="betting",this.ui.showBetOverlay(),this.ui.showDealerMessage("Выберите ставку"))}startGame(e){return a(this,void 0,void 0,(function*(){this.canPlaceBet(e)?(this.player.bets[0]=e,this.chips-=e,this.insuranceBet=0,this.gameState="playing",this.saveChipsToStorage(),this.ui.hideBetOverlay(),this.ui.elements.newGame.classList.add("hidden"),this.deck.getRemainingCards()<n.DECK_RESHUFFLE_THRESHOLD&&(this.deck=new t,this.cardCount=0,this.ui.showDealerMessage("Колода обновлена"),yield this.delay(1e3)),yield this.resetGame(),yield this.dealInitialCards(),this.updateUI()):this.showMessage("Ошибка","Недостаточно фишек для ставки!",2e3)}))}resetGame(){return a(this,void 0,void 0,(function*(){for(let e=0;e<this.player.hands.length;e++){const t=this.ui.getPlayerHandContainer(e);yield this.ui.clearCards(t,this.player.hands[e]),e>0&&t.remove()}this.player={hands:[[]],bets:[this.player.bets[0]],currentHandIndex:0},yield this.ui.clearCards(this.ui.elements.dealerCards,this.dealerHand),this.dealerHand=[]}))}dealInitialCards(){return a(this,void 0,void 0,(function*(){this.player.hands[0]=[this.drawCard(),this.drawCard()],this.dealerHand=[this.drawCard(),this.drawCard()];const e=this.ui.getPlayerHandContainer(0);yield this.ui.renderCard(this.player.hands[0][0],e),yield this.delay(500),yield this.ui.renderCard(this.dealerHand[0],this.ui.elements.dealerCards,!0),yield this.delay(500),yield this.ui.renderCard(this.player.hands[0][1],e),yield this.delay(500),yield this.ui.renderCard(this.dealerHand[1],this.ui.elements.dealerCards),this.checkInitialHands()}))}checkInitialHands(){const e=this.player.hands[this.player.currentHandIndex];this.isBlackjack(e)?(this.gameState="dealerTurn",this.revealDealerCard().then((()=>{if(this.isBlackjack(this.dealerHand))this.endGame("push","Оба блэкджека. Ставка возвращена.",this.player.bets[0]);else{const e=Math.floor(this.player.bets[0]*n.BLACKJACK_PAYOUT);this.endGame("win",`Блэкджек! Вы выиграли ${e} фишек!`,e+this.player.bets[0])}}))):"A"===this.dealerHand[1].value?(this.ui.showDealerMessage("Страховка доступна"),this.ui.updateUI({hit:!1,stand:!1,double:!1,split:!1,insurance:!0,surrender:!0})):(this.ui.showDealerMessage("Ваш ход"),this.updateUI())}hit(){return a(this,void 0,void 0,(function*(){if("playing"!==this.gameState)return;const e=this.player.hands[this.player.currentHandIndex],t=this.drawCard();e.push(t),yield this.ui.renderCard(t,this.ui.getPlayerHandContainer(this.player.currentHandIndex));this.calculateScore(e)>21?this.handleBust():this.updateUI()}))}stand(){return a(this,void 0,void 0,(function*(){"playing"===this.gameState&&(this.player.currentHandIndex<this.player.hands.length-1?(this.player.currentHandIndex++,this.ui.showDealerMessage(`Ваш ход (рука ${this.player.currentHandIndex+1})`),this.updateUI()):(this.gameState="dealerTurn",this.ui.showDealerMessage("Ход дилера"),yield this.revealDealerCard(),yield this.dealerPlay(),this.determineWinner()))}))}double(){return a(this,void 0,void 0,(function*(){this.canDouble()?(this.chips-=this.player.bets[this.player.currentHandIndex],this.player.bets[this.player.currentHandIndex]*=2,this.saveChipsToStorage(),yield this.hit(),this.calculateScore(this.player.hands[this.player.currentHandIndex])<=21&&(yield this.stand())):this.showMessage("Ошибка","Удвоение возможно только на 9, 10 или 11!",2e3)}))}split(){return a(this,void 0,void 0,(function*(){if(!this.canSplit())return void this.showMessage("Ошибка","Нельзя разделить!",2e3);const e=this.player.hands[this.player.currentHandIndex];this.chips-=this.player.bets[this.player.currentHandIndex];const t=[e.pop()];this.player.bets.push(this.player.bets[this.player.currentHandIndex]),this.player.hands.push(t),e.push(this.drawCard()),t.push(this.drawCard()),"A"===e[0].value?(this.showMessage("Тузы","При сплите тузов добавляется только одна карта.",2e3),yield this.ui.renderSplitHands(this.player.hands,this.player.currentHandIndex,this.player.bets),yield this.stand()):(yield this.ui.renderSplitHands(this.player.hands,this.player.currentHandIndex,this.player.bets),this.updateUI())}))}buyInsurance(){return a(this,void 0,void 0,(function*(){if(this.canAffordInsurance())if(this.insuranceBet=Math.floor(this.player.bets[0]/2),this.chips-=this.insuranceBet,this.saveChipsToStorage(),yield this.revealDealerCard(),this.isBlackjack(this.dealerHand)){const e=2*this.insuranceBet;this.chips+=this.insuranceBet+e,this.endGame("lose",`Дилер имеет блэкджек. Страховка выплатила ${e} фишек.`,0)}else this.showMessage("Страховка","Дилер без блэкджека. Страховка проиграна.",2e3),this.ui.showDealerMessage("Ваш ход"),this.updateUI();else this.showMessage("Ошибка","Недостаточно фишек для страховки!",2e3)}))}surrender(){return a(this,void 0,void 0,(function*(){if("playing"!==this.gameState||2!==this.player.hands[this.player.currentHandIndex].length)return void this.showMessage("Ошибка","Сдаться можно только на первых двух картах!",2e3);const e=Math.floor(this.player.bets[this.player.currentHandIndex]/2);this.chips+=e,this.endGame("push",`Вы сдались. Возвращено ${e} фишек.`,0)}))}revealDealerCard(){return a(this,void 0,void 0,(function*(){const e=this.ui.elements.dealerCards.children[0];this.ui.revealCard(e,this.dealerHand[0]),yield this.delay(600)}))}dealerPlay(){return a(this,void 0,void 0,(function*(){for(;this.shouldDealerDraw();){const e=this.drawCard();this.dealerHand.push(e),yield this.ui.renderCard(e,this.ui.elements.dealerCards),yield this.delay(500)}}))}determineWinner(){const e=this.calculateScore(this.dealerHand);let t=0,s=!0;for(let i=0;i<this.player.hands.length;i++){const a=this.calculateScore(this.player.hands[i]);a<=21&&(s=!1,e>21||a>e?t+=2*this.player.bets[i]:a===e&&(t+=this.player.bets[i]))}const i=t>0?"win":"lose",a=t>0?`Вы выиграли ${t} фишек!`:s?"Все руки переброшены. Вы проиграли.":e!==this.calculateScore(this.player.hands[0])||1!==this.player.hands.length||s?"Дилер выиграл!":"Ничья. Ставка возвращена.";this.endGame(i,a,t)}endGame(e,t,s){this.chips+=s,this.gameState="ended",this.saveChipsToStorage(),this.ui.showMessage("win"===e?"Победа":"lose"===e?"Поражение":"Ничья",t,3e3),this.ui.showDealerMessage("win"===e?"Поздравляю!":"Повезет в следующий раз!"),this.ui.elements.newGame.classList.remove("hidden"),this.updateUI(),this.chips<50&&this.ui.updateAddFundsOverlay(this.chips,this.gameState)}updateUI(){const e="ended"===this.gameState?this.calculateScore(this.dealerHand):0,t=this.player.hands.map((e=>this.calculateScore(e))).join(" / ");this.ui.updateUI(this.getUIState()),this.ui.updateScores(e,t,this.chips),this.ui.updateCardCount(this.deck.getRemainingCards(),this.cardCount),this.ui.updateAddFundsOverlay(this.chips,this.gameState)}canPlaceBet(e){return this.chips>=e&&e>=50}getUIState(){const e=this.player.hands[this.player.currentHandIndex],t=this.calculateScore(e),s=this.isBlackjack(e),i=2===e.length&&[9,10,11].includes(t)&&this.canDouble(),a=2===e.length&&this.canSplit();return s&&"playing"===this.gameState?{hit:!1,stand:!1,double:!1,split:!1,insurance:!1,surrender:!1}:{hit:"playing"===this.gameState&&t<21,stand:"playing"===this.gameState,double:"playing"===this.gameState&&i,split:"playing"===this.gameState&&a,insurance:"playing"===this.gameState&&"A"===this.dealerHand[1].value&&0===this.insuranceBet,surrender:"playing"===this.gameState&&2===e.length}}canDouble(){return this.chips>=this.player.bets[this.player.currentHandIndex]}canSplit(){const e=this.player.hands[this.player.currentHandIndex];return this.chips>=this.player.bets[this.player.currentHandIndex]&&2===e.length&&e[0].value===e[1].value&&this.player.hands.length<n.MAX_HANDS}canAffordInsurance(){return this.chips>=this.player.bets[0]/2}shouldDealerDraw(){const e=this.calculateScore(this.dealerHand);return e<17||17===e&&this.isSoftHand(this.dealerHand)}isSoftHand(e){let t=0,s=0;return e.forEach((e=>{t+=this.getCardValue(e),11===this.getCardValue(e)&&s++})),s>0&&t>17&&t<=21}isBlackjack(e){return 2===e.length&&21===this.calculateScore(e)}calculateScore(e){let t=0,s=0;for(e.forEach((e=>{const i=this.getCardValue(e);t+=i,11===i&&s++}));t>21&&s>0;)t-=10,s--;return t}getCardValue(e){return"A"===e.value?11:["K","Q","J"].includes(e.value)?10:parseInt(e.value,10)}drawCard(){try{const e=this.deck.drawCard();return this.updateCardCount(e),e}catch(e){return this.deck=new t,this.cardCount=0,this.ui.showDealerMessage("Колода обновлена"),this.drawCard()}}updateCardCount(e){const t=this.getCardValue(e);(t>=10||"A"===e.value)&&this.cardCount--,t>=2&&t<=6&&this.cardCount++}handleBust(){const e=this.player.hands[this.player.currentHandIndex],t=this.calculateScore(e);this.ui.showMessage("Перебор",`Рука ${this.player.currentHandIndex+1} набрала ${t}.`,2e3),this.player.currentHandIndex<this.player.hands.length-1?(this.player.currentHandIndex++,this.ui.showDealerMessage(`Ваш ход (рука ${this.player.currentHandIndex+1})`),this.updateUI()):(this.gameState="dealerTurn",this.revealDealerCard().then((()=>{this.dealerPlay().then((()=>this.determineWinner()))})))}delay(e){return new Promise((t=>setTimeout(t,e)))}showMessage(e,t,s){this.ui.showMessage(e,t,s)}saveChipsToStorage(){document.cookie=`chips=${this.chips}; path=/; max-age=31536000`}loadChipsFromStorage(){const e=document.cookie.split("; ").find((e=>e.startsWith("chips=")));this.chips=e&&parseInt(e.split("=")[1],10)||n.INITIAL_CHIPS}addFunds(){this.chips=n.INITIAL_CHIPS,this.saveChipsToStorage(),this.showMessage("Успех","Счет пополнен до 1000 фишек!",2e3),this.updateUI(),this.showBetOverlay()}}n.INITIAL_CHIPS=1e3,n.DECK_RESHUFFLE_THRESHOLD=26,n.BLACKJACK_PAYOUT=1.5,n.MAX_HANDS=4,new n})();